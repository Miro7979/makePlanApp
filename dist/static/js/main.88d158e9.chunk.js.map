{"version":3,"sources":["components/layout/signedInLinks.js","store/actions/authActions.js","components/layout/signedOutLinks.js","components/layout/navbar.js","components/dashboard/notification.js","components/project/projectSummary.js","components/project/projectList.js","components/dashboard/dashboard.js","components/project/projectDetails.js","components/auth/signIn.js","components/auth/signUp.js","components/project/createProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authreducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","autorFirstName","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88d158e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n  <ul className=\"right\">\r\n    <li><NavLink to='/create'>New Project</NavLink></li>\r\n    <li><a href=\"!#\" onClick={props.signOut}>Log Out</a></li>\r\n    <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n      { props.profile.initials }\r\n    </NavLink></li>\r\n  </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n  return(dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS '});\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOIN_ERROR', err});\r\n    });\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' })\r\n    }).catch(err => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err })\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n  <ul className=\"right\">\r\n    <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n    <li><NavLink to='/signin'>Login</NavLink></li>\r\n  </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './signedInLinks';\r\nimport SignedOutLinks from './signedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />; \r\n    return (\r\n    <nav className=\"nav-wrapper red darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo left\">Miro Plan Maker</Link>\r\n       { auth.isLoaded && links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n           {notifications && notifications.map(item => {\r\n             return (\r\n               <li key={item.id}>\r\n                 <span className=\"pink-text\"> {item.user} </span>\r\n                 <span>{item.content}</span>\r\n                 <div className=\"grey-text note-date\">\r\n                   {moment(item.time.toDate()).fromNow()}\r\n                 </div>\r\n               </li>\r\n             )\r\n           })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n    <div className=\"card-content grey-text text-darken-3\">\r\n      <span className=\"card-title\">{project.title}</span>\r\n      <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n  <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './projectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return(\r\n    <div className=\"project-list section\">\r\n    { projects && projects.map(project => {\r\n      return (\r\n        <Link to={'/project/' + project.id} key={project.id} >\r\n          <ProjectSummary project={project} />\r\n        </Link>\r\n      )\r\n    })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './notification';\r\nimport ProjectList from '../project/projectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nclass Dashboard extends Component {\r\n  render() {\r\n    \r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return(\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects}/>\r\n          </div>\r\n            <div className=\"col s12 m5 offset-m1\">\r\n              <Notifications notifications={notifications} />\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects',  orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n const { project, auth } = props;\r\n if (!auth.uid) return <Redirect to='/signin' />\r\n if (project) {\r\n   return (\r\n    <div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{ project.title }</span>\r\n          <p>{ project.content }</p>\r\n        </div>\r\n        <div className=\"card-action gray lighten-4 gray-text\">\r\n          <div>Posted by { project.autorFirstName } { project.authorLastName }</div>\r\n          <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   )\r\n }\r\n else {\r\n\r\n   return(\r\n   <div className=\"container center\">\r\n     <p>Loading project...</p>\r\n   </div>\r\n   )\r\n }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(ProjectDetails);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n        <h5 className=\"gray-text text-darken-3\">Sign In</h5>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n        </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n             { authError ? <p>{authError}</p>: null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (credentials) => dispatch(signIn(credentials))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n        <h5 className=\"gray-text text-darken-3\">Sign Up</h5>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n        </div>\r\n        <div className=\"input-field\">\r\n        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n        <div className=\"red-text center\">\r\n          {authError ? <p>{authError}</p> : null }\r\n        </div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n   // console.log(this.state);\r\n   this.props.createProject(this.state);\r\n   this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n        <h5 className=\"gray-text text-darken-3\">Create new project</h5>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"content\">Project Content</label>\r\n          <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n        </div>\r\n        <div className=\"input-field\">\r\n        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n      </div>\r\n      </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n  return (dispatch, getState,{ getFirebase, getFirestore}) => {\r\n    // make async call to server\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n    });\r\n  }\r\n};\r\n\r\n\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/navbar';\nimport Dashboard from './components/dashboard/dashboard';\nimport ProjectDetails from './components/project/projectDetails';\nimport SignIn from './components/auth/signIn';\nimport SignUp from './components/auth/signUp';\nimport CreateProject from './components/project/createProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Dashboard} />\n        <Route path='/project/:id' component={ProjectDetails} />\n        <Route path='/signin' component={SignIn} />\n        <Route path='/signup' component={SignUp} />\n        <Route path='/create' component={CreateProject} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state;\r\n      case 'SIGNUP_SUCCESS':\r\n        console.log('signup success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return {\r\n          ...state,\r\n          authError: action.err.message\r\n        }\r\n      default: \r\n        return state;\r\n  }\r\n\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n    {id: '1', title: 'I need help here', content: 'blah blag bloop'},\r\n    {id: '2', title: 'I need wazz up here', content: 'blah blag bloop'},\r\n    {id: '3', title: 'I say wazzup ladys', content: 'blah blag bloop'},\r\n    {id: '4', title: 'I say blablabla ladys', content: 'blah blag bloop'},\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err)\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authreducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// initialize firebase\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAutH9xnn8ioaEJqDhSDIFLofxsUBcE1zI\",\r\n    authDomain: \"makeplanapp.firebaseapp.com\",\r\n    databaseURL: \"https://makeplanapp.firebaseio.com\",\r\n    projectId: \"makeplanapp\",\r\n    storageBucket: \"makeplanapp.appspot.com\",\r\n    messagingSenderId: \"306063809153\",\r\n    appId: \"1:306063809153:web:f05d6c020c9425140d4b80\",\r\n    measurementId: \"G-ZTE9PXR4W1\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n//.settings({timestampsInSnapshots: true})\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebase, firebaseConfig)\n    )\n);\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    attachAuthIsReady: true\n  };\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <App />\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n\nserviceWorker.unregister(); \n"],"sourceRoot":""}